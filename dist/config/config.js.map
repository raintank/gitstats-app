{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass GitstatsConfigCtrl {\n  /** @ngInject */\n    constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.validKey = false;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.secureJsonData) {\n      this.appModel.secureJsonData = {};\n    }\n    if (this.appModel.enabled) {\n      this.validateKey();\n    }\n  }\n\n  validateKey() {\n    var self = this;\n    var p = this.backendSrv.get(\"/api/plugin-proxy/raintank-gitstats-app/api/tasks\", {metric: \"/raintank/apps/gitstats/*\"});\n    p.then((resp) => {\n      self.validKey = true;\n      self.tasks = resp.body;\n    }, () => {\n      if (self.appModel.enabled) {\n        self.appModel.jsonData.apiKeySet = false;\n        self.appModel.secureJsonData.apiKey = \"\";\n        self.errorMsg = \"invlid apiKey\";\n      }\n    });\n    return p;\n  }\n\n  preUpdate() {\n    var model = this.appModel;\n    if (!model.enabled) {\n      return Promise.resolve();\n    }\n\n    if (!model.jsonData.apiKeySet && !model.secureJsonData.apiKey) {\n      model.enabled = false;\n      return Promise.reject(\"apiKey not set.\");\n    }\n    // if the apiKey is being set, check and make sure that\n    // we have initialized our datasource and dashboards.\n    if (model.secureJsonData.apiKey) {\n      model.jsonData.apiKeySet = true;\n    }\n\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    var self = this;\n    return this.validateKey()\n    .then(() => {\n      return self.appEditCtrl.importDashboards();\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    var p = self.backendSrv.get('/api/datasources');\n    p.then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n      _.forEach(results, function(ds) {\n        if (foundGraphite && foundElastic) { return; }\n        if (ds.name === \"raintank\") {\n          foundGraphite = true;\n        }\n        if (ds.name === \"raintankEvents\") {\n          foundElastic = true;\n        }\n      });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/raintank-gitstats-app/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/raintank-gitstats-app/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('/api/datasources', elastic));\n      }\n      return Promise.all(promises);\n    });\n    return p;\n  }\n\n  addNewTask() {\n    var self = this;\n    var task = {\n      \"name\": \"Github Stats: \" + this.newTask.owner + \"/\"+this.newTask.repo,\n      \"metrics\": {\"/raintank/apps/gitstats/*\":0},\n      \"config\": {\n        \"/raintank/apps/gitstats\": {\n          \"repo\": this.newTask.repo,\n          \"owner\": this.newTask.owner,\n          \"access_token\": this.newTask.access_token\n        }\n      },\n      \"interval\": 600,\n      \"route\": { \"type\": \"any\", \"config\": {}},\n      \"enabled\": true\n    };\n\n    this.backendSrv.post(\"/api/plugin-proxy/raintank-gitstats-app/api/tasks\", task).then(function() {\n      self.validateKey();\n      self.cancelNewTask();\n    });\n  }\n\n  removeTask(task) {\n    var self = this;\n    this.backendSrv.delete(\"/api/plugin-proxy/raintank-gitstats-app/api/tasks/\"+task.id).then(function() {\n      self.validateKey();\n    });\n  }\n\n  cancelNewTask() {\n    this.newTask = {};\n    this.addNew = false;\n  }\n\n  toggleAddNew() {\n    this.addNew = true;\n  }\n}\n\nGitstatsConfigCtrl.template = configTemplate;\n\nexport {\n  GitstatsConfigCtrl as ConfigCtrl\n};\n\n"]}